name: Build Plugin

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 获取完整历史（可能影响 Gradle Wrapper）
        
    - name: Pre-Build Checks
      run: |
        echo "===== Essential Files Check ====="
        echo "Workspace: $(pwd)"
        echo "--- Directory Listing ---"
        ls -la
        echo "--- Gradle Wrapper ---"
        ls -l gradle* || echo "No gradle files found"
        echo "--- Build Files ---"
        ls -l build.gradle* settings.gradle* || echo "No build files found"
        
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'gradle'
        
    - name: Verify Gradle Wrapper
      run: |
        # 检查 gradlew 是否存在
        if [ ! -f "gradlew" ]; then
          echo "::error::gradlew file missing! Generating new wrapper..."
          gradle wrapper --gradle-version 8.5
        fi
        
        # 确保可执行
        chmod +x gradlew
        echo "Gradle Wrapper version:"
        ./gradlew --version || echo "Gradle failed to run"
        
    - name: Build with Gradle
      run: |
        # 创建日志文件确保存在
        touch build.log
        # 运行构建并捕获日志
        ./gradlew build --stacktrace --info 2>&1 | tee build.log
        echo "BUILD_LOG=build.log" >> $GITHUB_ENV
        
    - name: Upload Artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: BlockServerCMD
        path: build/libs/*.jar
        retention-days: 7
        
    - name: Upload Build Log
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: build-log
        path: ${{ env.BUILD_LOG }}
        
    - name: Failure Diagnostics
      if: failure()
      run: |
        echo "===== FINAL DIAGNOSTICS ====="
        echo "Java: $(java -version 2>&1)"
        echo "Gradle:"
        ./gradlew --version || true
        echo "Log content:"
        cat build.log || echo "No log file"
